## LOAD PACKAGES ####
library(dplyr)
library(purrr)
## READ IN DATA ####
data_ip = read.table("data/stacked_data_for_R.csv", fileEncoding = "UTF-8",
skipNul = TRUE, header = TRUE, sep = "\t", stringsAsFactors = FALSE)
## CLEAN DATA ####
# Select relevant columns:
data_select = data_ip %>%
select(participant, condition, fac_1, fac_2, rating, item, context)
# turn colums into factors and create column with dummy values
data_clean = data_select %>%
mutate(NormScore = 500) %>% ## catch errors
mutate(participant = factor(data_select$participant)) %>%
mutate(condition = factor(data_select$condition)) %>%
mutate(item = factor(data_select$item)) %>%
mutate(context = factor(data_select$context))
# apply z-tranform on ratings
for(subj in levels(data_clean$participant)){
subj.mean = mean(data_clean[data_clean$participant == subj,]$rating)
subj.sd = sd(data_clean[data_clean$participant == subj,]$rating)
data_clean[data_clean$participant == subj,]$NormScore = (data_clean[data_clean$participant == subj,]$rating - subj.mean)/subj.sd
}
cd1 = data_clean %>%
filter(condition == "cd1_ass_+n") %>%
select(participant, condition, fac_1, fac_2, rating, item, context, NormScore)
cd2 = data_clean %>%
filter(condition == "cd2_ass_-n") %>%
select(participant, condition, fac_1, fac_2, rating, item, context, NormScore)
cd3 = data_clean %>%
filter(condition == "cd3_com_+n") %>%
select(participant, condition, fac_1, fac_2, rating, item, context, NormScore)
cd4 = data_clean %>%
filter(condition == "cd4_com_-n") %>%
select(participant, condition, fac_1, fac_2, rating, item, context, NormScore)
## LOAD PACKAGES ####
library(lme4)
library(lmerTest)
## READ IN AND ORGANIZE DATA ####
source('scripts/NRness_01_cleaning.R')
data_stats = data_clean
summary(cd1$rating, mean, sd)
summary(cd2$rating, mean, sd)
summary(cd3$rating, mean, sd)
summary(cd4$rating, mean, sd)
## THESE ARE MY MODELS USED FOR PUBLICATION ####
# maximal random effect structure that converges (even with lmerTest loaded):
mymodel_01_1 = lmer(NormScore ~ fac_1 * fac_2 +
(1+fac_1*fac_2|participant) +
(1+fac_1*fac_2|context),
data=data_stats)
summary(mymodel_01_1)
anova(mymodel_01_1)
# same as mymodel_01 but WITHOUT the interaction:
mymodel_01_2 = lmer(NormScore ~ fac_1 + fac_2 +
(1+fac_1*fac_2|participant) +
(1+fac_1*fac_2|context),
data=data_stats)
summary(mymodel_01_2)
## READ IN DATA ####
source('scripts/NRness_01_cleaning.R')
## LOAD PACKAGES ####
library(ggplot2)
## ORGANIZE DATA ####
data_figs = data_clean
## SET THEME ####
my_theme = theme(
axis.title.x = element_text(size = 30),
axis.text.x = element_text(size = 26),
axis.title.y = element_text(size = 30),
axis.text.y = element_text(size = 26),
title = element_text(size = 32, color = "gray20"))
box.plot = ggplot(data_figs, aes(x = condition, y = rating)) +
geom_boxplot(fill="dodgerblue") +
scale_x_discrete(labels=c("cd1","cd2","cd3","cd4")) +
my_theme
box.plot
pdf('figures/boxplot.pdf')
box.plot
dev.off()
## BOX PLOT Z_TRANS####
box.plot_ztrans = ggplot(data_figs, aes(x = condition, y = NormScore)) +
geom_boxplot(fill="dodgerblue") +
scale_x_discrete(labels=c("cd1","cd2","cd3","cd4")) +
my_theme
box.plot_ztrans
pdf('figures/boxplot_ztrans.pdf')
box.plot_ztrans
dev.off()
## HISTOGRAMS FOR 4 CONDITIONS ####
cd1_hg.plot = ggplot(cd1, aes(x = rating)) +
geom_histogram(fill="dodgerblue") +
labs(title="cd1", x="cd1-ass_+n ratings", y="count") +
#   labs(title="Histogram cd1", x="cd1 ratings", y="count") +
ylim(c(0,125)) + my_theme
cd1_hg.plot
pdf("figures/cd1_hg.pdf")
cd1_hg.plot
dev.off()
cd2_hg.plot = ggplot(cd2, aes(x = rating)) +
geom_histogram(fill="dodgerblue") +
labs(title="cd2", x="cd2-ass_-n ratings", y="count") +
# labs(title="Histogram cd2", x="cd2 ratings", y="count") +
ylim(c(0,125)) + my_theme
pdf("figures/cd2_hg.pdf")
cd2_hg.plot
dev.off()
cd2_hg.plot
cd3_hg.plot = ggplot(cd3, aes(x = rating)) +
geom_histogram(fill="dodgerblue") +
labs(title="cd3", x="cd3-com_+n ratings", y="count") +
# labs(title="Histogram cd3", x="cd3 ratings", y="count") +
ylim(c(0,125)) + my_theme
pdf("figures/cd3_hg.pdf")
cd3_hg.plot
dev.off()
cd3_hg.plot
cd4_hg.plot = ggplot(cd4, aes(x = rating)) +
geom_histogram(fill="dodgerblue") +
labs(title="cd4", x="cd4-com_-n ratings", y="count") +
# labs(title="Histogram cd4", x="cd4 ratings", y="count") +
ylim(c(0,125)) + my_theme
pdf("figures/cd4_hg.pdf")
cd4_hg.plot
dev.off()
cd4_hg.plot
## HISTOGRAMS FOR Z-TRANSFORMS CONDITIONS ####
cd1_ztrans_hg.plot = ggplot(cd1, aes(x = NormScore)) +
geom_histogram(fill="dodgerblue") +
labs(title="Histogram cd1", x="cd1-ass_+n ratings_ztrans", y="count") +
ylim(c(0,125)) + my_theme
pdf("figures/cd1_ztrans_hg.pdf")
cd1_ztrans_hg.plot
dev.off()
cd1_ztrans_hg.plot
dev.off()
cd2_ztrans_hg.plot = ggplot(cd2, aes(x = NormScore)) +
geom_histogram(fill="dodgerblue") +
labs(title="Histogram cd2", x="cd2-ass_-n ratings_ztrans", y="count") +
ylim(c(0,125)) + my_theme
pdf("figures/cd2_ztrans_hg.pdf")
cd2_ztrans_hg.plot
dev.off()
cd2_ztrans_hg.plot
cd3_ztrans_hg.plot = ggplot(cd3, aes(x = NormScore)) +
geom_histogram(fill="dodgerblue") +
labs(title="Histogram cd3", x="cd3-com_+n ratings_ztrans", y="count") +
ylim(c(0,125)) + my_theme
pdf("figures/cd3_ztrans_hg.pdf")
cd3_ztrans_hg.plot
dev.off()
cd3_ztrans_hg.plot
cd4_ztrans_hg.plot = ggplot(cd4, aes(x = NormScore)) +
geom_histogram(fill="dodgerblue") +
labs(title="Histogram cd4", x="cd4-com_-n ratings_ztrans", y="count") +
ylim(c(0,125)) + my_theme
pdf("figures/cd4_ztrans_hg.pdf")
cd4_ztrans_hg.plot
dev.off()
cd4_ztrans_hg.plot
## OTHER BOXPLOTS FOR DATA EXPLORATION ####
box.plot_CTs = ggplot(data_figs, aes(x = context, y = rating)) +
geom_boxplot(fill="dodgerblue")
box.plot_CTs
box.plot_cd1 = ggplot(cd1, aes(x = context, y = rating)) +
geom_boxplot(fill="dodgerblue")
box.plot_cd1
## THESE ARE MY MODELS USED FOR PUBLICATION ####
# maximal random effect structure that converges (even with lmerTest loaded):
mymodel_01_1 = lmer(NormScore ~ fac_1 * fac_2 +
(1+fac_1*fac_2|participant) +
(1+fac_1*fac_2|context),
data=data_stats)
summary(mymodel_01_1)
anova(mymodel_01_1)
# same as mymodel_01 but WITHOUT the interaction:
mymodel_01_2 = lmer(NormScore ~ fac_1 + fac_2 +
(1+fac_1*fac_2|participant) +
(1+fac_1*fac_2|context),
data=data_stats)
summary(mymodel_01_2)
anova(mymodel_01_1, mymodel_01_2)
## BOX PLOT Z_TRANS####
box.plot_ztrans = ggplot(data_figs, aes(x = condition, y = NormScore)) +
geom_boxplot(fill="dodgerblue") +
scale_x_discrete(labels=c("cd1","cd2","cd3","cd4")) +
my_theme
box.plot_ztrans
